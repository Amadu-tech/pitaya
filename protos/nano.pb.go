// Code generated by protoc-gen-go. DO NOT EDIT.
// source: nano.proto

/*
Package protos is a generated protocol buffer package.

It is generated from these files:
	nano.proto

It has these top-level messages:
	Push
	Session
	Msg
	Request
	Response
*/
package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RPCType int32

const (
	RPCType_Sys  RPCType = 0
	RPCType_User RPCType = 1
)

var RPCType_name = map[int32]string{
	0: "Sys",
	1: "User",
}
var RPCType_value = map[string]int32{
	"Sys":  0,
	"User": 1,
}

func (x RPCType) String() string {
	return proto.EnumName(RPCType_name, int32(x))
}
func (RPCType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Push struct {
	Route string `protobuf:"bytes,1,opt,name=Route" json:"Route,omitempty"`
	Uid   string `protobuf:"bytes,2,opt,name=Uid" json:"Uid,omitempty"`
	Data  []byte `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (m *Push) Reset()                    { *m = Push{} }
func (m *Push) String() string            { return proto.CompactTextString(m) }
func (*Push) ProtoMessage()               {}
func (*Push) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Push) GetRoute() string {
	if m != nil {
		return m.Route
	}
	return ""
}

func (m *Push) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *Push) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type Session struct {
	ID   int64             `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
	Uid  string            `protobuf:"bytes,2,opt,name=Uid" json:"Uid,omitempty"`
	Data map[string]string `protobuf:"bytes,3,rep,name=Data" json:"Data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Session) Reset()                    { *m = Session{} }
func (m *Session) String() string            { return proto.CompactTextString(m) }
func (*Session) ProtoMessage()               {}
func (*Session) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Session) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *Session) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *Session) GetData() map[string]string {
	if m != nil {
		return m.Data
	}
	return nil
}

type Msg struct {
	ID    uint64 `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
	Route string `protobuf:"bytes,2,opt,name=Route" json:"Route,omitempty"`
	Data  []byte `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	Reply string `protobuf:"bytes,4,opt,name=Reply" json:"Reply,omitempty"`
}

func (m *Msg) Reset()                    { *m = Msg{} }
func (m *Msg) String() string            { return proto.CompactTextString(m) }
func (*Msg) ProtoMessage()               {}
func (*Msg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Msg) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *Msg) GetRoute() string {
	if m != nil {
		return m.Route
	}
	return ""
}

func (m *Msg) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Msg) GetReply() string {
	if m != nil {
		return m.Reply
	}
	return ""
}

type Request struct {
	Type    RPCType  `protobuf:"varint,1,opt,name=Type,enum=protos.RPCType" json:"Type,omitempty"`
	Session *Session `protobuf:"bytes,2,opt,name=Session" json:"Session,omitempty"`
	Msg     *Msg     `protobuf:"bytes,3,opt,name=Msg" json:"Msg,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Request) GetType() RPCType {
	if m != nil {
		return m.Type
	}
	return RPCType_Sys
}

func (m *Request) GetSession() *Session {
	if m != nil {
		return m.Session
	}
	return nil
}

func (m *Request) GetMsg() *Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

type Response struct {
	Data  []byte `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
	Error string `protobuf:"bytes,2,opt,name=Error" json:"Error,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Response) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Response) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterType((*Push)(nil), "protos.Push")
	proto.RegisterType((*Session)(nil), "protos.Session")
	proto.RegisterType((*Msg)(nil), "protos.Msg")
	proto.RegisterType((*Request)(nil), "protos.Request")
	proto.RegisterType((*Response)(nil), "protos.Response")
	proto.RegisterEnum("protos.RPCType", RPCType_name, RPCType_value)
}

func init() { proto.RegisterFile("nano.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 316 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0xc6, 0xdd, 0xec, 0x6a, 0xda, 0x89, 0xd4, 0xb2, 0x78, 0x88, 0xa2, 0x50, 0xe2, 0xa5, 0x0a,
	0xf6, 0x50, 0x05, 0xc5, 0xa3, 0xb6, 0x87, 0x1e, 0x0a, 0x65, 0x6b, 0x1e, 0x20, 0xe2, 0x52, 0x8b,
	0x25, 0x1b, 0x77, 0x12, 0x31, 0xcf, 0xe1, 0x0b, 0xcb, 0xfe, 0x49, 0x5a, 0xa1, 0xa7, 0xcc, 0x7c,
	0x3b, 0x7c, 0xf3, 0xfb, 0x86, 0x00, 0xe4, 0x59, 0xae, 0x46, 0x85, 0x56, 0xa5, 0xe2, 0x47, 0xf6,
	0x83, 0xc9, 0x33, 0xb0, 0x45, 0x85, 0x1f, 0xfc, 0x14, 0x0e, 0x85, 0xaa, 0x4a, 0x19, 0x93, 0x01,
	0x19, 0x76, 0x85, 0x6b, 0x78, 0x1f, 0x68, 0xba, 0x7e, 0x8f, 0x03, 0xab, 0x99, 0x92, 0x73, 0x60,
	0x93, 0xac, 0xcc, 0x62, 0x3a, 0x20, 0xc3, 0x63, 0x61, 0xeb, 0xe4, 0x97, 0x40, 0xb8, 0x94, 0x88,
	0x6b, 0x95, 0xf3, 0x1e, 0x04, 0xb3, 0x89, 0x35, 0xa1, 0x22, 0x98, 0x4d, 0xf6, 0x38, 0xdc, 0xb6,
	0x0e, 0x74, 0x18, 0x8d, 0xcf, 0x1c, 0x0f, 0x8e, 0xbc, 0xc1, 0xc8, 0xbc, 0x4d, 0xf3, 0x52, 0xd7,
	0xce, 0xfc, 0xfc, 0x01, 0xba, 0xad, 0x64, 0xdc, 0x3e, 0x65, 0xed, 0x19, 0x4d, 0x69, 0xb8, 0xbf,
	0xb3, 0x4d, 0x25, 0xfd, 0x06, 0xd7, 0x3c, 0x05, 0x8f, 0x24, 0x49, 0x81, 0xce, 0x71, 0xb5, 0x03,
	0xc4, 0x2c, 0x50, 0x1b, 0x34, 0xd8, 0x0d, 0xba, 0x27, 0x96, 0x9d, 0x94, 0xc5, 0xa6, 0x8e, 0x99,
	0x9f, 0x34, 0x4d, 0xf2, 0x03, 0xa1, 0x90, 0x5f, 0x95, 0xc4, 0x92, 0x5f, 0x01, 0x7b, 0xad, 0x0b,
	0x77, 0xb2, 0xde, 0xf8, 0xa4, 0x49, 0x22, 0x16, 0x2f, 0x46, 0x16, 0xf6, 0x91, 0x5f, 0xb7, 0xb7,
	0xb1, 0x1b, 0xa3, 0xed, 0x9c, 0x97, 0x45, 0x7b, 0xbb, 0x4b, 0x4b, 0x6c, 0x19, 0xa2, 0x71, 0xd4,
	0x8c, 0xcd, 0x71, 0x25, 0x8c, 0x9e, 0xdc, 0x43, 0x47, 0x48, 0x2c, 0x54, 0x8e, 0x5b, 0x5e, 0xf2,
	0x9f, 0x77, 0xaa, 0xb5, 0xd2, 0x4d, 0x32, 0xdb, 0xdc, 0x5c, 0x40, 0xe8, 0x81, 0x78, 0x08, 0x74,
	0x59, 0x63, 0xff, 0x80, 0x77, 0x80, 0xa5, 0x28, 0x75, 0x9f, 0xbc, 0xb9, 0xdf, 0xe0, 0xee, 0x2f,
	0x00, 0x00, 0xff, 0xff, 0x5b, 0xda, 0x62, 0x99, 0x1b, 0x02, 0x00, 0x00,
}
